import{_ as a,C as i,G as e,aN as t}from"./chunks/framework.BtNxmiVb.js";const n="/Vue-Command-Component/Vue-Command-Component/assets/vue-dev-tools.B2BTBk8C.png",g=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"guide/faq.md","filePath":"guide/faq.md"}'),h={name:"guide/faq.md"};function l(p,s,o,k,r,d){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><h2 id="组件未正常渲染" tabindex="-1">组件未正常渲染 <a class="header-anchor" href="#组件未正常渲染" aria-label="Permalink to &quot;组件未正常渲染&quot;">​</a></h2><p>如果组件未显示，请首先检查DOM节点是否正确挂载。若节点已挂载但未显示，通常是由于组件库的CSS样式未正确导入所致。</p><h2 id="组件无法被vue开发工具审查" tabindex="-1">组件无法被Vue开发工具审查 <a class="header-anchor" href="#组件无法被vue开发工具审查" aria-label="Permalink to &quot;组件无法被Vue开发工具审查&quot;">​</a></h2><p>这是当前已知限制，暂无完美的解决方案。不过您可以使用以下替代方法：在Vue开发者工具中使用组件选择器（见下图）选择目标组件进行审查。</p><p><img src="'+n+`" alt="开发者工具选择器"></p><h2 id="路由跳转后组件未销毁" tabindex="-1">路由跳转后组件未销毁 <a class="header-anchor" href="#路由跳转后组件未销毁" aria-label="Permalink to &quot;路由跳转后组件未销毁&quot;">​</a></h2><p>如果你希望路由跳转后销毁所有弹窗,请使用<code>useDestroyAllOnRouteChange</code>hooks.它的作用就是监听路由变化,然后销毁所有弹窗。</p><p>安装:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vue-cmd/hooks</span></span></code></pre></div><p>使用:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useDestroyAllOnRouteChange } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vue-cmd/hooks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 尽量提前调用,比如在App.vue中调用</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useDestroyAllOnRouteChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// stop();</span></span></code></pre></div>`,12)]))}const u=a(h,[["render",l]]);export{g as __pageData,u as default};
